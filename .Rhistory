#install.packages(c("readxl","magrittr","dplyr")
library(readxl)
library(magrittr)
library(dplyr)
#initialize data frame to hold team information
teams <- read_xlsx("Analytics_Attachment.xlsx", sheet = 1)
teams$wins <- 0
teams$losses <- 0
teams$ptdiff <- 0
teams$cwins <- 0
teams$closses <- 0
teams$dwins <- 0
teams$dlosses <- 0
#pull in game information
games <- read_xlsx("Analytics_Attachment.xlsx", sheet = 2)
games$Date <- as.Date(games$Date)
gamedays <- unique(games$Date)
currentDay <- gamedays[1]
#set winner to be the team name
hdex <- which(games$Winner == "Home")
adex <- which(games$Winner == "Away")
games$Winner[hdex] <- games$`Home Team`[hdex]
games$Winner[adex] <- games$`Away Team`[adex]
rm(adex,hdex)
eliminations <- read_xlsx("Analytics_Attachment.xlsx",sheet=3)
eliminations$`Date Eliminated` = "Playoffs"
resultsToday <- subset(games, games$Date == currentDay)
if (resultsToday$Winner[game] == resultsToday$`Home Team`[game]) {
winner <- resultsToday$`Home Team`[game]
loser <- resultsToday$`Away Team`[game]
spread <- resultsToday$`Home Score`[game] - resultsToday$`Away Score`[game]
} else {
winner <- resultsToday$`Away Team`[game]
loser <- resultsToday$`Home Team`[game]
spread <- resultsToday$`Away Score`[game] - resultsToday$`Home Score`[game]
}
windex <- which(teams$Team_Name == winner)
lindex <- which(teams$Team_Name == loser)
#assign wins, losses, and ptdiff to the global teams df
teams$wins[windex] <<- teams$wins[windex] + 1
teams$ptdiff[windex] <<- teams$ptdiff[windex] + spread
teams$losses[lindex] <<- teams$losses[lindex] + 1
teams$ptdiff[lindex] <<- teams$ptdiff[lindex] - spread
game <- resultsToday[1]
if (resultsToday$Winner[game] == resultsToday$`Home Team`[game]) {
winner <- resultsToday$`Home Team`[game]
loser <- resultsToday$`Away Team`[game]
spread <- resultsToday$`Home Score`[game] - resultsToday$`Away Score`[game]
} else {
winner <- resultsToday$`Away Team`[game]
loser <- resultsToday$`Home Team`[game]
spread <- resultsToday$`Away Score`[game] - resultsToday$`Home Score`[game]
}
windex <- which(teams$Team_Name == winner)
lindex <- which(teams$Team_Name == loser)
#assign wins, losses, and ptdiff to the global teams df
teams$wins[windex] <<- teams$wins[windex] + 1
teams$ptdiff[windex] <<- teams$ptdiff[windex] + spread
teams$losses[lindex] <<- teams$losses[lindex] + 1
teams$ptdiff[lindex] <<- teams$ptdiff[lindex] - spread
game <- 1
if (resultsToday$Winner[game] == resultsToday$`Home Team`[game]) {
winner <- resultsToday$`Home Team`[game]
loser <- resultsToday$`Away Team`[game]
spread <- resultsToday$`Home Score`[game] - resultsToday$`Away Score`[game]
} else {
winner <- resultsToday$`Away Team`[game]
loser <- resultsToday$`Home Team`[game]
spread <- resultsToday$`Away Score`[game] - resultsToday$`Home Score`[game]
}
windex <- which(teams$Team_Name == winner)
lindex <- which(teams$Team_Name == loser)
#assign wins, losses, and ptdiff to the global teams df
teams$wins[windex] <<- teams$wins[windex] + 1
teams$ptdiff[windex] <<- teams$ptdiff[windex] + spread
teams$losses[lindex] <<- teams$losses[lindex] + 1
teams$ptdiff[lindex] <<- teams$ptdiff[lindex] - spread
#assign wins, losses, and ptdiff to the global teams df
teams$wins[windex] <<- teams$wins[windex] + 1
teams$ptdiff[windex] <<- teams$ptdiff[windex] + spread
teams$losses[lindex] <<- teams$losses[lindex] + 1
teams$ptdiff[lindex] <<- teams$ptdiff[lindex] - spread
teams
teams$Team_Name
teams$wins
windex
lindex
teams$wins[windex] <<- teams$wins[windex] + 1
teams$wins
teams$wins[windex]
#update teams matrix with information from game day (need to update with cwins/closses/dwins/dlosses)
tallyScores <- function(currentDay) {
resultsToday <- subset(games, games$Date == currentDay)
for (game in 1:dim(resultsToday)[1]) {
if (resultsToday$Winner[game] == resultsToday$`Home Team`[game]) {
winner <- resultsToday$`Home Team`[game]
loser <- resultsToday$`Away Team`[game]
spread <- resultsToday$`Home Score`[game] - resultsToday$`Away Score`[game]
} else {
winner <- resultsToday$`Away Team`[game]
loser <- resultsToday$`Home Team`[game]
spread <- resultsToday$`Away Score`[game] - resultsToday$`Home Score`[game]
}
windex <- which(teams$Team_Name == winner)
lindex <- which(teams$Team_Name == loser)
#assign wins, losses, and ptdiff to the global teams df
teams$wins[windex] <<- teams$wins[windex] + 1
teams$ptdiff[windex] <<- teams$ptdiff[windex] + spread
teams$losses[lindex] <<- teams$losses[lindex] + 1
teams$ptdiff[lindex] <<- teams$ptdiff[lindex] - spread
if (teams$Division_id[windex] == teams$Division_id[lindex]) {
teams$dwins[windex] <<- teams$dwins + 1
teams$dlosses[lindex] <<- teams$dlosses + 1
}
if (teams$Conference_id[windex] == teams$Conference_id[lindex]) {
teams$cwins[windex] <<- teams$cwins + 1
teams$closses[lindex] <<- teams$closses + 1
}
}
}
tallyScores(currentDay)
#update teams matrix with information from game day (need to update with cwins/closses/dwins/dlosses)
tallyScores <- function(currentDay) {
resultsToday <- subset(games, games$Date == currentDay)
for (game in 1:dim(resultsToday)[1]) {
if (resultsToday$Winner[game] == resultsToday$`Home Team`[game]) {
winner <- resultsToday$`Home Team`[game]
loser <- resultsToday$`Away Team`[game]
spread <- resultsToday$`Home Score`[game] - resultsToday$`Away Score`[game]
} else {
winner <- resultsToday$`Away Team`[game]
loser <- resultsToday$`Home Team`[game]
spread <- resultsToday$`Away Score`[game] - resultsToday$`Home Score`[game]
}
windex <- which(teams$Team_Name == winner)
lindex <- which(teams$Team_Name == loser)
#assign wins, losses, and ptdiff to the global teams df
teams$wins[windex] <<- teams$wins[windex] + 1
teams$ptdiff[windex] <<- teams$ptdiff[windex] + spread
teams$losses[lindex] <<- teams$losses[lindex] + 1
teams$ptdiff[lindex] <<- teams$ptdiff[lindex] - spread
if (teams$Division_id[windex] == teams$Division_id[lindex]) {
teams$dwins[windex] <<- teams$dwins[windex] + 1
teams$dlosses[lindex] <<- teams$dlosses[lindex] + 1
}
if (teams$Conference_id[windex] == teams$Conference_id[lindex]) {
teams$cwins[windex] <<- teams$cwins[windex] + 1
teams$closses[lindex] <<- teams$closses[lindex] + 1
}
}
}
tallyScores(currentDay)
View(teams)
#install.packages(c("readxl","magrittr","dplyr")
library(readxl)
library(magrittr)
library(dplyr)
#initialize data frame to hold team information
teams <- read_xlsx("Analytics_Attachment.xlsx", sheet = 1)
teams$wins <- 0
teams$losses <- 0
teams$ptdiff <- 0
teams$cwins <- 0
teams$closses <- 0
teams$dwins <- 0
teams$dlosses <- 0
#pull in game information
games <- read_xlsx("Analytics_Attachment.xlsx", sheet = 2)
games$Date <- as.Date(games$Date)
gamedays <- unique(games$Date)
currentDay <- gamedays[1]
#set winner to be the team name
hdex <- which(games$Winner == "Home")
adex <- which(games$Winner == "Away")
games$Winner[hdex] <- games$`Home Team`[hdex]
games$Winner[adex] <- games$`Away Team`[adex]
rm(adex,hdex)
eliminations <- read_xlsx("Analytics_Attachment.xlsx",sheet=3)
eliminations$`Date Eliminated` = "Playoffs"
#update teams matrix with information from game day (need to update with cwins/closses/dwins/dlosses)
tallyScores <- function(currentDay) {
resultsToday <- subset(games, games$Date == currentDay)
for (game in 1:dim(resultsToday)[1]) {
if (resultsToday$Winner[game] == resultsToday$`Home Team`[game]) {
winner <- resultsToday$`Home Team`[game]
loser <- resultsToday$`Away Team`[game]
spread <- resultsToday$`Home Score`[game] - resultsToday$`Away Score`[game]
} else {
winner <- resultsToday$`Away Team`[game]
loser <- resultsToday$`Home Team`[game]
spread <- resultsToday$`Away Score`[game] - resultsToday$`Home Score`[game]
}
windex <- which(teams$Team_Name == winner)
lindex <- which(teams$Team_Name == loser)
#assign wins, losses, and ptdiff to the global teams df
teams$wins[windex] <<- teams$wins[windex] + 1
teams$ptdiff[windex] <<- teams$ptdiff[windex] + spread
teams$losses[lindex] <<- teams$losses[lindex] + 1
teams$ptdiff[lindex] <<- teams$ptdiff[lindex] - spread
if (teams$Division_id[windex] == teams$Division_id[lindex]) {
teams$dwins[windex] <<- teams$dwins[windex] + 1
teams$dlosses[lindex] <<- teams$dlosses[lindex] + 1
}
if (teams$Conference_id[windex] == teams$Conference_id[lindex]) {
teams$cwins[windex] <<- teams$cwins[windex] + 1
teams$closses[lindex] <<- teams$closses[lindex] + 1
}
}
}
View(teams)
tallyScores(currentDay)
View(teams)
rm(list=ls())
#remember to set your working directory & install the "readxl" package
#install.packages(c("readxl","magrittr","dplyr")
library(readxl)
library(magrittr)
library(dplyr)
#initialize data frame to hold team information
teams <- read_xlsx("Analytics_Attachment.xlsx", sheet = 1)
?read_xlsx
?readxl
read_excel
?read_excel
